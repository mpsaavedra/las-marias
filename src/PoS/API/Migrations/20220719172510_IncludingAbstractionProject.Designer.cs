// <auto-generated />
using System;
using LasMarias.PoS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LasMarias.PoS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220719172510_IncludingAbstractionProject")]
    partial class IncludingAbstractionProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CategoryId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("ParentCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Menu", b =>
                {
                    b.Property<long>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MenuId"));

                    b.Property<bool>("Available")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Offer")
                        .HasColumnType("boolean");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("StandType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.MenuPlate", b =>
                {
                    b.Property<long>("MenuPlateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MenuPlateId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlateId")
                        .HasColumnType("bigint");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("MenuPlateId");

                    b.HasIndex("MenuId");

                    b.HasIndex("PlateId");

                    b.ToTable("MenuPlates");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Plate", b =>
                {
                    b.Property<long>("PlateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlateId"));

                    b.Property<bool>("Available")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Recipe")
                        .HasColumnType("text");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PlateId");

                    b.ToTable("Plates");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.PlateCategory", b =>
                {
                    b.Property<long>("PlateCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlateCategoryId"));

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("PlateId")
                        .HasColumnType("bigint");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PlateCategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PlateId");

                    b.ToTable("PlateCategory");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.PlatePhoto", b =>
                {
                    b.Property<long>("PlatePhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlatePhotoId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("DefaultPhoto")
                        .HasColumnType("boolean");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DesignColor")
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("bytea");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("text");

                    b.Property<long?>("PlateId")
                        .HasColumnType("bigint");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PlatePhotoId");

                    b.HasIndex("PlateId");

                    b.ToTable("PlatePhotos");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.PlateProduct", b =>
                {
                    b.Property<long>("PlateProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlateProductId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("MeasureUnitId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PlateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PlateProductId");

                    b.HasIndex("PlateId");

                    b.ToTable("PlateProducts");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Seat", b =>
                {
                    b.Property<long>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SeatId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InventaryNumber")
                        .HasColumnType("text");

                    b.Property<int>("Occupied")
                        .HasColumnType("integer");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SeatType")
                        .HasColumnType("integer");

                    b.Property<long>("StandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TableId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SeatId");

                    b.HasIndex("Code");

                    b.HasIndex("StandId");

                    b.HasIndex("TableId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Stand", b =>
                {
                    b.Property<long>("StandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("StandId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Reserved")
                        .HasColumnType("boolean");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StandType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("StandId");

                    b.ToTable("Stands");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Table", b =>
                {
                    b.Property<long>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TableId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InventaryNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsOcuppied")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("StandId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TableId");

                    b.HasIndex("StandId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Category", b =>
                {
                    b.HasOne("LasMarias.PoS.Domain.Models.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.MenuPlate", b =>
                {
                    b.HasOne("LasMarias.PoS.Domain.Models.Menu", "Menu")
                        .WithMany("MenuPlates")
                        .HasForeignKey("MenuId");

                    b.HasOne("LasMarias.PoS.Domain.Models.Plate", "Plate")
                        .WithMany("MenuPlates")
                        .HasForeignKey("PlateId");

                    b.Navigation("Menu");

                    b.Navigation("Plate");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.PlateCategory", b =>
                {
                    b.HasOne("LasMarias.PoS.Domain.Models.Category", "Category")
                        .WithMany("PlateCategories")
                        .HasForeignKey("CategoryId");

                    b.HasOne("LasMarias.PoS.Domain.Models.Plate", "Plate")
                        .WithMany("PlateCategories")
                        .HasForeignKey("PlateId");

                    b.Navigation("Category");

                    b.Navigation("Plate");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.PlatePhoto", b =>
                {
                    b.HasOne("LasMarias.PoS.Domain.Models.Plate", "Plate")
                        .WithMany("PlatePhotos")
                        .HasForeignKey("PlateId");

                    b.Navigation("Plate");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.PlateProduct", b =>
                {
                    b.HasOne("LasMarias.PoS.Domain.Models.Plate", "Plate")
                        .WithMany("PlateProducts")
                        .HasForeignKey("PlateId");

                    b.Navigation("Plate");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Seat", b =>
                {
                    b.HasOne("LasMarias.PoS.Domain.Models.Stand", "Stand")
                        .WithMany("Seats")
                        .HasForeignKey("StandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LasMarias.PoS.Domain.Models.Table", "Table")
                        .WithMany("Seats")
                        .HasForeignKey("TableId");

                    b.Navigation("Stand");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Table", b =>
                {
                    b.HasOne("LasMarias.PoS.Domain.Models.Stand", "Stand")
                        .WithMany("Tables")
                        .HasForeignKey("StandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stand");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("PlateCategories");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Menu", b =>
                {
                    b.Navigation("MenuPlates");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Plate", b =>
                {
                    b.Navigation("MenuPlates");

                    b.Navigation("PlateCategories");

                    b.Navigation("PlatePhotos");

                    b.Navigation("PlateProducts");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Stand", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("LasMarias.PoS.Domain.Models.Table", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
