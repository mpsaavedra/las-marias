// <auto-generated />
using System;
using LasMarias.Profile.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LasMarias.Profile.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220718015729_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.Benefit", b =>
                {
                    b.Property<long>("BenefitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BenefitId"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("numeric");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Over")
                        .HasColumnType("integer");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BenefitId");

                    b.ToTable("Benefits");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.Country", b =>
                {
                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CountryId"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PhoneCode")
                        .HasColumnType("integer");

                    b.Property<int>("Region")
                        .HasColumnType("integer");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeType")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("HiredDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("ReleaseNote")
                        .HasColumnType("text");

                    b.Property<int?>("ReleaseReason")
                        .HasColumnType("integer");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DNI")
                        .HasColumnType("text");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int?>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PassportNumber")
                        .HasColumnType("text");

                    b.Property<long?>("ReferralUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VerificationEmailToken")
                        .HasColumnType("text");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ReferralUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.UserBenefit", b =>
                {
                    b.Property<long>("UserBenefitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserBenefitId"));

                    b.Property<long?>("BenefitId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RowVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("UserBenefitId");

                    b.HasIndex("BenefitId");

                    b.ToTable("UserBenefits");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.Employee", b =>
                {
                    b.HasOne("LasMarias.Profile.Domain.Models.User", "User")
                        .WithOne("Employee")
                        .HasForeignKey("LasMarias.Profile.Domain.Models.Employee", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.User", b =>
                {
                    b.HasOne("LasMarias.Profile.Domain.Models.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId");

                    b.HasOne("LasMarias.Profile.Domain.Models.User", "ReferralUser")
                        .WithMany("ReferredUsers")
                        .HasForeignKey("ReferralUserId");

                    b.Navigation("Country");

                    b.Navigation("ReferralUser");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.UserBenefit", b =>
                {
                    b.HasOne("LasMarias.Profile.Domain.Models.Benefit", "Benefit")
                        .WithMany("UserBenefits")
                        .HasForeignKey("BenefitId");

                    b.HasOne("LasMarias.Profile.Domain.Models.User", "User")
                        .WithMany("Benefits")
                        .HasForeignKey("BenefitId");

                    b.Navigation("Benefit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.Benefit", b =>
                {
                    b.Navigation("UserBenefits");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.Country", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("LasMarias.Profile.Domain.Models.User", b =>
                {
                    b.Navigation("Benefits");

                    b.Navigation("Employee");

                    b.Navigation("ReferredUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
